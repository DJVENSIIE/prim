<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structures_8h" kind="file" language="C++">
    <compoundname>structures.h</compoundname>
    <includes refid="effect_8h" local="yes">../data/effect.h</includes>
    <includes refid="error_8h" local="yes">../data/error.h</includes>
    <includes refid="elements_8h" local="yes">elements.h</includes>
    <includedby refid="staff_8h" local="yes">headers/data/staff.h</includedby>
    <includedby refid="map__utils_8h" local="yes">headers/utils/map_utils.h</includedby>
    <includedby refid="translation_8h" local="yes">headers/utils/translation.h</includedby>
    <includedby refid="elements_8c" local="yes">src/utils/elements.c</includedby>
    <includedby refid="structures_8c" local="yes">src/utils/structures.c</includedby>
    <includedby refid="test__structure_8h" local="yes">tests/test_structure.h</includedby>
    <incdepgraph>
      <node id="3">
        <label>stdbool.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>box.h</label>
        <link refid="box_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>elements.h</label>
        <link refid="elements_8h"/>
      </node>
      <node id="6">
        <label>error.h</label>
        <link refid="error_8h"/>
      </node>
      <node id="9">
        <label>../../headers/utils/utils.h</label>
        <link refid="utils_8h"/>
      </node>
      <node id="4">
        <label>machine.h</label>
        <link refid="machine_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>../data/effect.h</label>
        <link refid="effect_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>facade.h</label>
        <link refid="facade_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>headers/utils/structures.h</label>
        <link refid="structures_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>../utils/const.h</label>
        <link refid="const_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="8">
        <label>headers/utils/map_utils.h</label>
        <link refid="map__utils_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>src/main.h</label>
        <link refid="main_8h_source"/>
      </node>
      <node id="4">
        <label>headers/interface.h</label>
        <link refid="interface_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>tests/list_suite.h</label>
        <link refid="list__suite_8h"/>
      </node>
      <node id="14">
        <label>src/utils/structures.c</label>
        <link refid="structures_8c"/>
      </node>
      <node id="3">
        <label>headers/map.h</label>
        <link refid="map_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>src/view/ncurses/nc_headers/interface_ncurses.h</label>
        <link refid="interface__ncurses_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>src/model/staff.c</label>
        <link refid="model_2staff_8c"/>
      </node>
      <node id="11">
        <label>tests/test_map.h</label>
        <link refid="test__map_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>tests/test_structure.h</label>
        <link refid="test__structure_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>headers/utils/structures.h</label>
        <link refid="structures_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>headers/utils/translation.h</label>
        <link refid="translation_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>tests/test_endTurn.h</label>
        <link refid="test__end_turn_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>src/view/ncurses/interface_ncurses.c</label>
        <link refid="interface__ncurses_8c"/>
      </node>
      <node id="2">
        <label>headers/data/staff.h</label>
        <link refid="staff_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_dictionary___s" prot="public">Dictionary_S</innerclass>
    <innerclass refid="struct_list___s" prot="public">List_S</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="structures_8h_1a4acdeaf37852ad4dac0d5118b1f24976" prot="public" static="no">
        <type>struct <ref refid="struct_dictionary___s" kindref="compound">Dictionary_S</ref></type>
        <definition>Dictionary :represent a Dictionary</definition>
        <argsstring></argsstring>
        <name>Dictionary</name>
        <briefdescription>
<para>a dictionary composed by it&apos;s length it&apos;s number of element and a couple </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/utils/structures.h" line="28" column="18"/>
      </memberdef>
      <memberdef kind="typedef" id="structures_8h_1a17b4022430bcb8cf112cada5d768cdd4" prot="public" static="no">
        <type>struct <ref refid="struct_list___s" kindref="compound">List_S</ref></type>
        <definition>List</definition>
        <argsstring></argsstring>
        <name>List</name>
        <briefdescription>
<para>represent a linked list </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/utils/structures.h" line="38" column="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="structures_8h_1ab491ddfd4c97a3e831fee54040627836" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structures_8h_1a17b4022430bcb8cf112cada5d768cdd4" kindref="member">List</ref> *</type>
        <definition>List * list_create</definition>
        <argsstring>(Element first)</argsstring>
        <name>list_create</name>
        <param>
          <type><ref refid="elements_8h_1a8b9bbfde536d6e2a415388fa10347062" kindref="member">Element</ref></type>
          <declname>first</declname>
        </param>
        <briefdescription>
<para>Create a linked list with an element. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">first</parametername>
</parameternamelist>
<parameterdescription>
<para>an Element </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new linked list </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/utils/structures.h" line="48" column="6" bodyfile="src/utils/structures.c" bodystart="21" bodyend="30" declfile="headers/utils/structures.h" declline="48" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="structures_8h_1a41ebbeea76fea9802f236d0bdefb1507" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structures_8h_1a17b4022430bcb8cf112cada5d768cdd4" kindref="member">List</ref> *</type>
        <definition>List * list_createEmpty</definition>
        <argsstring>()</argsstring>
        <name>list_createEmpty</name>
        <briefdescription>
<para>Create a linked list without element. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A new linked list </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/utils/structures.h" line="56" column="6" bodyfile="src/utils/structures.c" bodystart="13" bodyend="19" declfile="headers/utils/structures.h" declline="56" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="structures_8h_1a61e52bd4917f43bbfbfb935de181ae24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="elements_8h_1a8b9bbfde536d6e2a415388fa10347062" kindref="member">Element</ref> *</type>
        <definition>List * list_getByIndex</definition>
        <argsstring>(List *list, int index)</argsstring>
        <name>list_getByIndex</name>
        <param>
          <type><ref refid="structures_8h_1a17b4022430bcb8cf112cada5d768cdd4" kindref="member">List</ref> *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>get an Element by it&apos;s index </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">list</parametername>
</parameternamelist>
<parameterdescription>
<para>a linked list </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the Element in list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer of the element </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/utils/structures.h" line="65" column="9" bodyfile="src/utils/structures.c" bodystart="128" bodyend="140" declfile="headers/utils/structures.h" declline="65" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="structures_8h_1a7de6b846951ef5b7fe7d34233ece1e2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int list_getSize</definition>
        <argsstring>(List *list)</argsstring>
        <name>list_getSize</name>
        <param>
          <type><ref refid="structures_8h_1a17b4022430bcb8cf112cada5d768cdd4" kindref="member">List</ref> *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>get the size of the linked list </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">list</parametername>
</parameternamelist>
<parameterdescription>
<para>a linked list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the size of the list </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/utils/structures.h" line="73" column="5" bodyfile="src/utils/structures.c" bodystart="142" bodyend="154" declfile="headers/utils/structures.h" declline="73" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="structures_8h_1a3e492a87ab4b5e779633839f55ce4adc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="error_8h_1a2c911c64bc2c9547864df93078a7204e" kindref="member">ErrorCode</ref></type>
        <definition>ErrorCode list_addElement</definition>
        <argsstring>(List *l, Element e)</argsstring>
        <name>list_addElement</name>
        <param>
          <type><ref refid="structures_8h_1a17b4022430bcb8cf112cada5d768cdd4" kindref="member">List</ref> *</type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="elements_8h_1a8b9bbfde536d6e2a415388fa10347062" kindref="member">Element</ref></type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>add an Element to the list, if the key of the Element e is the same that an other Element in the list we overwrite the Element </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">l</parametername>
</parameternamelist>
<parameterdescription>
<para>a linked list </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">e</parametername>
</parameternamelist>
<parameterdescription>
<para>the Element to add to the linked list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ErrorCode </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/utils/structures.h" line="84" column="11" bodyfile="src/utils/structures.c" bodystart="34" bodyend="54" declfile="headers/utils/structures.h" declline="84" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="structures_8h_1af6f2851143eb298ee9e4e713a172ac85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="error_8h_1a2c911c64bc2c9547864df93078a7204e" kindref="member">ErrorCode</ref></type>
        <definition>ErrorCode list_addCoupleNumberText</definition>
        <argsstring>(List *l, int number, char *text)</argsstring>
        <name>list_addCoupleNumberText</name>
        <param>
          <type><ref refid="structures_8h_1a17b4022430bcb8cf112cada5d768cdd4" kindref="member">List</ref> *</type>
          <declname>l</declname>
        </param>
        <param>
          <type>int</type>
          <declname>number</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>create an Element by a number and a char*, add this Element to the list, if the key of the Element e is the same that an other Element in the list we overwrite the Element </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">l</parametername>
</parameternamelist>
<parameterdescription>
<para>a linked list </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">number</parametername>
</parameternamelist>
<parameterdescription>
<para>int that we will add to the list by creating an Element </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">text</parametername>
</parameternamelist>
<parameterdescription>
<para>char* that we will add to the list by creating an Element </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ErrorCode </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/utils/structures.h" line="96" column="11" bodyfile="src/utils/structures.c" bodystart="56" bodyend="65" declfile="headers/utils/structures.h" declline="96" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="structures_8h_1a605b13fb1d21ac87ba2a8bc41a1a0f41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="error_8h_1a2c911c64bc2c9547864df93078a7204e" kindref="member">ErrorCode</ref></type>
        <definition>ErrorCode list_addCoupleNumber</definition>
        <argsstring>(List *l, int n1, int n2)</argsstring>
        <name>list_addCoupleNumber</name>
        <param>
          <type><ref refid="structures_8h_1a17b4022430bcb8cf112cada5d768cdd4" kindref="member">List</ref> *</type>
          <declname>l</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n2</declname>
        </param>
        <briefdescription>
<para>create an Element by two number, add this Element to the list, if the key of the Element e is the same that an other Element in the list we overwrite the Element </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">l</parametername>
</parameternamelist>
<parameterdescription>
<para>a linked list </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">n1</parametername>
</parameternamelist>
<parameterdescription>
<para>number int that we will add to the list by creating an Element </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">n2</parametername>
</parameternamelist>
<parameterdescription>
<para>number int that we will add to the list by creating an Element </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ErrorCode </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/utils/structures.h" line="108" column="11" bodyfile="src/utils/structures.c" bodystart="67" bodyend="73" declfile="headers/utils/structures.h" declline="108" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="structures_8h_1a918888d8cc32c221491d83a41dc161f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="elements_8h_1a8b9bbfde536d6e2a415388fa10347062" kindref="member">Element</ref> *</type>
        <definition>Element list_next</definition>
        <argsstring>(List **current)</argsstring>
        <name>list_next</name>
        <param>
          <type><ref refid="structures_8h_1a17b4022430bcb8cf112cada5d768cdd4" kindref="member">List</ref> **</type>
          <declname>current</declname>
        </param>
        <briefdescription>
<para>return the current value and go to the next element of the linked list </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">current</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer of a linked list</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an Element </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/utils/structures.h" line="120" column="9" bodyfile="src/utils/structures.c" bodystart="77" bodyend="90" declfile="headers/utils/structures.h" declline="120" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="structures_8h_1a7f04d3c2b386066e5981ee3c8a42ead0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="elements_8h_1a8b9bbfde536d6e2a415388fa10347062" kindref="member">Element</ref> *</type>
        <definition>Element * list_getCurrent</definition>
        <argsstring>(List *list)</argsstring>
        <name>list_getCurrent</name>
        <param>
          <type><ref refid="structures_8h_1a17b4022430bcb8cf112cada5d768cdd4" kindref="member">List</ref> *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>return the current value of the linked list, element should be free </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">list</parametername>
</parameternamelist>
<parameterdescription>
<para>a linked list</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an Element </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/utils/structures.h" line="132" column="9" bodyfile="src/utils/structures.c" bodystart="93" bodyend="98" declfile="headers/utils/structures.h" declline="132" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="structures_8h_1a8f0b02775c43c68047f288c45bfb6c38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="error_8h_1a2c911c64bc2c9547864df93078a7204e" kindref="member">ErrorCode</ref></type>
        <definition>ErrorCode list_removeByIndex</definition>
        <argsstring>(List **list, int index)</argsstring>
        <name>list_removeByIndex</name>
        <param>
          <type><ref refid="structures_8h_1a17b4022430bcb8cf112cada5d768cdd4" kindref="member">List</ref> **</type>
          <declname>list</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>remove an Element of the linked list by it&apos;s index </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">list</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer of linked list </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>int which represent the index where we will remove the Element </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ErrorCode </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/utils/structures.h" line="144" column="11" bodyfile="src/utils/structures.c" bodystart="100" bodyend="126" declfile="headers/utils/structures.h" declline="144" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="structures_8h_1af68596009432f0d0b481aee8e88dae85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="error_8h_1a2c911c64bc2c9547864df93078a7204e" kindref="member">ErrorCode</ref></type>
        <definition>ErrorCode list_destroy</definition>
        <argsstring>(List *list)</argsstring>
        <name>list_destroy</name>
        <param>
          <type><ref refid="structures_8h_1a17b4022430bcb8cf112cada5d768cdd4" kindref="member">List</ref> *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>destroy all of the list ( recursive ) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">list</parametername>
</parameternamelist>
<parameterdescription>
<para>a linked list</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ErrorCode </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/utils/structures.h" line="156" column="11" bodyfile="src/utils/structures.c" bodystart="157" bodyend="166" declfile="headers/utils/structures.h" declline="156" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="structures_8h_1ab879f8c161399f217419aa2c02ef14e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="error_8h_1a2c911c64bc2c9547864df93078a7204e" kindref="member">ErrorCode</ref></type>
        <definition>ErrorCode list_destroyFirst</definition>
        <argsstring>(List *list)</argsstring>
        <name>list_destroyFirst</name>
        <param>
          <type><ref refid="structures_8h_1a17b4022430bcb8cf112cada5d768cdd4" kindref="member">List</ref> *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>destroy a list </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">list</parametername>
</parameternamelist>
<parameterdescription>
<para>a linked list</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ErrorCode </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/utils/structures.h" line="168" column="11" bodyfile="src/utils/structures.c" bodystart="168" bodyend="174" declfile="headers/utils/structures.h" declline="168" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="structures_8h_1a20f2a6a7dfc2006694d7b60c00caa16d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structures_8h_1a4acdeaf37852ad4dac0d5118b1f24976" kindref="member">Dictionary</ref> *</type>
        <definition>Dictionary * dictionary_create</definition>
        <argsstring>(int length)</argsstring>
        <name>dictionary_create</name>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Create a Dictionary with a predefined size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>int which represent the size of the dictionary </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a Dictionary </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/utils/structures.h" line="179" column="12" bodyfile="src/utils/structures.c" bodystart="176" bodyend="183" declfile="headers/utils/structures.h" declline="179" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="structures_8h_1ae533255a651a6d7a46048295023a73bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="error_8h_1a2c911c64bc2c9547864df93078a7204e" kindref="member">ErrorCode</ref></type>
        <definition>ErrorCode dictionary_destroy</definition>
        <argsstring>(Dictionary *d)</argsstring>
        <name>dictionary_destroy</name>
        <param>
          <type><ref refid="structures_8h_1a4acdeaf37852ad4dac0d5118b1f24976" kindref="member">Dictionary</ref> *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>free the dictionary </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">d</parametername>
</parameternamelist>
<parameterdescription>
<para>Dictionary which represent the dictionary </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ErrorCode </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/utils/structures.h" line="189" column="11" bodyfile="src/utils/structures.c" bodystart="185" bodyend="192" declfile="headers/utils/structures.h" declline="189" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="structures_8h_1a9a0c435e75a9bacb2f81f31a26e4ba0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="elements_8h_1a8b9bbfde536d6e2a415388fa10347062" kindref="member">Element</ref> *</type>
        <definition>Element* dictionary_getElement</definition>
        <argsstring>(Dictionary *d, Element key)</argsstring>
        <name>dictionary_getElement</name>
        <param>
          <type><ref refid="structures_8h_1a4acdeaf37852ad4dac0d5118b1f24976" kindref="member">Dictionary</ref> *</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="elements_8h_1a8b9bbfde536d6e2a415388fa10347062" kindref="member">Element</ref></type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>get an Element by it&apos;s key </para>
        </briefdescription>
        <detaileddescription>
<para>Element* <ref refid="structures_8h_1a9a0c435e75a9bacb2f81f31a26e4ba0c" kindref="member">dictionary_getElement(Dictionary* d, Element key)</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">d</parametername>
</parameternamelist>
<parameterdescription>
<para>Dictionary which represent the dictionary </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>Element that we search in the linked list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer of the Element </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; current value check</para>
        </inbodydescription>
        <location file="headers/utils/structures.h" line="200" column="9" bodyfile="src/utils/structures.c" bodystart="194" bodyend="213" declfile="headers/utils/structures.h" declline="200" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="structures_8h_1ac977daa392acb5ad830020bbae557a4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="error_8h_1a2c911c64bc2c9547864df93078a7204e" kindref="member">ErrorCode</ref></type>
        <definition>ErrorCode dictionary_addElement</definition>
        <argsstring>(Dictionary *d, Element key, Element value)</argsstring>
        <name>dictionary_addElement</name>
        <param>
          <type><ref refid="structures_8h_1a4acdeaf37852ad4dac0d5118b1f24976" kindref="member">Dictionary</ref> *</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="elements_8h_1a8b9bbfde536d6e2a415388fa10347062" kindref="member">Element</ref></type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="elements_8h_1a8b9bbfde536d6e2a415388fa10347062" kindref="member">Element</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>add Elements by creating a Couple composed by the key and the value </para>
        </briefdescription>
        <detaileddescription>
<para>ErrorCode <ref refid="structures_8h_1ac977daa392acb5ad830020bbae557a4f" kindref="member">dictionary_addElement(Dictionary* d, Element key, Element value)</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">d</parametername>
</parameternamelist>
<parameterdescription>
<para>Dictionary which represent the dictionary </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>Element represent the key of the Couple that we will add </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Element represent the value of the Couple that we will add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ErrorCode </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; current value check</para>
        </inbodydescription>
        <location file="headers/utils/structures.h" line="212" column="11" bodyfile="src/utils/structures.c" bodystart="215" bodyend="265" declfile="headers/utils/structures.h" declline="212" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="structures_8h_1af5b7abf3d6853545e4a717b7e81ce7f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="elements_8h_1a811c807f274f44c0646c5f4fad32a3b8" kindref="member">Couple</ref> *</type>
        <definition>Couple* dictionary_getCoupleByIndex</definition>
        <argsstring>(Dictionary *d, int index)</argsstring>
        <name>dictionary_getCoupleByIndex</name>
        <param>
          <type><ref refid="structures_8h_1a4acdeaf37852ad4dac0d5118b1f24976" kindref="member">Dictionary</ref> *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>get a Couple in the dictionary by an index </para>
        </briefdescription>
        <detaileddescription>
<para>Couple* <ref refid="structures_8h_1af5b7abf3d6853545e4a717b7e81ce7f9" kindref="member">dictionary_getCoupleByIndex( Dictionary *d, int index)</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">d</parametername>
</parameternamelist>
<parameterdescription>
<para>Dictionary which represent the dictionary </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>int which represent the index of the Couple in the dictionary</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer of Couple </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/utils/structures.h" line="224" column="8" bodyfile="src/utils/structures.c" bodystart="267" bodyend="272" declfile="headers/utils/structures.h" declline="224" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="structures_8h_1a71abab50b857c5fc0f9ca4b3e7d828b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="error_8h_1a2c911c64bc2c9547864df93078a7204e" kindref="member">ErrorCode</ref></type>
        <definition>ErrorCode dictionary_addCoupleText</definition>
        <argsstring>(Dictionary *d, char *key, char *value)</argsstring>
        <name>dictionary_addCoupleText</name>
        <param>
          <type><ref refid="structures_8h_1a4acdeaf37852ad4dac0d5118b1f24976" kindref="member">Dictionary</ref> *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>add a Couple composed of two char * </para>
        </briefdescription>
        <detaileddescription>
<para>ErrorCode dictionary_addCoupleText(Dictionary <emphasis>d,char</emphasis> key, char* value)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">d</parametername>
</parameternamelist>
<parameterdescription>
<para>Dictionary which represent the dictionary </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>char* which represent the key of the Couple </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>char* which represent the value of the Couple</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ErrorCode </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/utils/structures.h" line="237" column="11" bodyfile="src/utils/structures.c" bodystart="276" bodyend="287" declfile="headers/utils/structures.h" declline="237" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="structures_8h_1a4cd363198ff02b6179d77852b1752682" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="error_8h_1a2c911c64bc2c9547864df93078a7204e" kindref="member">ErrorCode</ref></type>
        <definition>ErrorCode dictionary_addCoupleNumberText</definition>
        <argsstring>(Dictionary *d, int key, char *value)</argsstring>
        <name>dictionary_addCoupleNumberText</name>
        <param>
          <type><ref refid="structures_8h_1a4acdeaf37852ad4dac0d5118b1f24976" kindref="member">Dictionary</ref> *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>add a Couple composed of int key and char * value </para>
        </briefdescription>
        <detaileddescription>
<para>ErrorCode <ref refid="structures_8h_1a4cd363198ff02b6179d77852b1752682" kindref="member">dictionary_addCoupleNumberText(Dictionary* d,int key, char* value)</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">d</parametername>
</parameternamelist>
<parameterdescription>
<para>Dictionary which represent the dictionary </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>int which represent the key of the Couple </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>char* which represent the value of the Couple</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ErrorCode </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/utils/structures.h" line="250" column="11" bodyfile="src/utils/structures.c" bodystart="302" bodyend="313" declfile="headers/utils/structures.h" declline="250" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="structures_8h_1af8bc518fcf854ea825256f9609715bee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="elements_8h_1a8b9bbfde536d6e2a415388fa10347062" kindref="member">Element</ref> *</type>
        <definition>Element* dictionary_getElementText</definition>
        <argsstring>(Dictionary *d, char *key)</argsstring>
        <name>dictionary_getElementText</name>
        <param>
          <type><ref refid="structures_8h_1a4acdeaf37852ad4dac0d5118b1f24976" kindref="member">Dictionary</ref> *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>get Element in a Dictionary by it&apos;s char* key </para>
        </briefdescription>
        <detaileddescription>
<para>Element* dictionary_getElementText(Dictionary <emphasis>d, char</emphasis> key)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">d</parametername>
</parameternamelist>
<parameterdescription>
<para>Dictionary which represent the dictionary </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>char* which represent the key of the Couple</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer of Element </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/utils/structures.h" line="263" column="9" bodyfile="src/utils/structures.c" bodystart="315" bodyend="322" declfile="headers/utils/structures.h" declline="263" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="structures_8h_1a6f4c1fa01984f36b0370e5d0ec272f32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="error_8h_1a2c911c64bc2c9547864df93078a7204e" kindref="member">ErrorCode</ref></type>
        <definition>ErrorCode dictionary_addCoupleNumber</definition>
        <argsstring>(Dictionary *d, int key, int value)</argsstring>
        <name>dictionary_addCoupleNumber</name>
        <param>
          <type><ref refid="structures_8h_1a4acdeaf37852ad4dac0d5118b1f24976" kindref="member">Dictionary</ref> *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>add a Couple composed of two int </para>
        </briefdescription>
        <detaileddescription>
<para>ErrorCode <ref refid="structures_8h_1a6f4c1fa01984f36b0370e5d0ec272f32" kindref="member">dictionary_addCoupleNumber( Dictionary* d, int key, int value )</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">d</parametername>
</parameternamelist>
<parameterdescription>
<para>Dictionary which represent the dictionary </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>int which represent the key of the Couple </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>int which represent the value of the Couple</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ErrorCode </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/utils/structures.h" line="276" column="11" bodyfile="src/utils/structures.c" bodystart="289" bodyend="300" declfile="headers/utils/structures.h" declline="276" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="structures_8h_1a6d823f873402734b5f96b6bd3ddc8e4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="elements_8h_1a8b9bbfde536d6e2a415388fa10347062" kindref="member">Element</ref> *</type>
        <definition>Element* dictionary_getElementNumber</definition>
        <argsstring>(Dictionary *d, int key)</argsstring>
        <name>dictionary_getElementNumber</name>
        <param>
          <type><ref refid="structures_8h_1a4acdeaf37852ad4dac0d5118b1f24976" kindref="member">Dictionary</ref> *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>get Element in a Dictionary by it&apos;s number key </para>
        </briefdescription>
        <detaileddescription>
<para>Element* <ref refid="structures_8h_1a6d823f873402734b5f96b6bd3ddc8e4a" kindref="member">dictionary_getElementNumber(Dictionary *d, int key)</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">d</parametername>
</parameternamelist>
<parameterdescription>
<para>Dictionary which represent the dictionary </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>int which represent the key of the Couple</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer of Element </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="headers/utils/structures.h" line="289" column="9" bodyfile="src/utils/structures.c" bodystart="324" bodyend="328" declfile="headers/utils/structures.h" declline="289" declcolumn="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Ramzy ZEBRIR </para>
</simplesect>
<simplesect kind="version"><para>0.1 </para>
</simplesect>
<simplesect kind="date"><para>26/03/2021 </para>
</simplesect>
<simplesect kind="see"><para><ref refid="effect_8h" kindref="compound">effect.h</ref></para>
</simplesect>
Contains structures </para>
    </detaileddescription>
    <location file="headers/utils/structures.h"/>
  </compounddef>
</doxygen>
