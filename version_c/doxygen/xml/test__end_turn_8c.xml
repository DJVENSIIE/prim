<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="test__end_turn_8c" kind="file" language="C++">
    <compoundname>test_endTurn.c</compoundname>
    <includes refid="test__end_turn_8h" local="yes">test_endTurn.h</includes>
    <incdepgraph>
      <node id="7">
        <label>stdbool.h</label>
      </node>
      <node id="14">
        <label>../../headers/utils/utils.h</label>
        <link refid="utils_8h"/>
      </node>
      <node id="3">
        <label>CUnit/Basic.h</label>
      </node>
      <node id="9">
        <label>stdlib.h</label>
      </node>
      <node id="19">
        <label>elements.h</label>
        <link refid="elements_8h"/>
      </node>
      <node id="10">
        <label>machine.h</label>
        <link refid="machine_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>data/difficulty.h</label>
        <link refid="difficulty_8h"/>
      </node>
      <node id="4">
        <label>structure_list_test.h</label>
        <link refid="structure__list__test_8h"/>
      </node>
      <node id="21">
        <label>data/case.h</label>
        <link refid="case_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>../utils/structures.h</label>
        <link refid="structures_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>error.h</label>
        <link refid="error_8h"/>
      </node>
      <node id="13">
        <label>facade.h</label>
        <link refid="facade_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tests/test_endTurn.c</label>
        <link refid="test__end_turn_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>test_endTurn.h</label>
        <link refid="test__end_turn_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>data/machine_info.h</label>
        <link refid="machine__info_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>../utils/const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="16">
        <label>effect.h</label>
        <link refid="effect_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>box.h</label>
        <link refid="box_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>../map.h</label>
        <link refid="map_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>../headers/utils/map_utils.h</label>
        <link refid="map__utils_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>data/staff.h</label>
        <link refid="staff_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>translation.h</label>
        <link refid="translation_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>../data/actions.h</label>
        <link refid="actions_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="test__end_turn_8c_1a59685eb116d1283465be71ea90f227f1" prot="public" static="no" mutable="no">
        <type><ref refid="utils_8h_1acfafb36b3d421d90e2aa61c8076d117d" kindref="member">Vector2D</ref></type>
        <definition>Vector2D testEndTurn_gate</definition>
        <argsstring></argsstring>
        <name>testEndTurn_gate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Valentin DREANO </para>
</simplesect>
<simplesect kind="version"><para>0.1 </para>
</simplesect>
<simplesect kind="date"><para>17/04/2021</para>
</simplesect>
Contains all the suite for endTurn function tests The assumption is made that the setters and getter are functional </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_endTurn.c" line="13" column="10" bodyfile="tests/test_endTurn.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__end_turn_8c_1a3c0be7beb7136c97c49a0c9c7df477e4" prot="public" static="no" mutable="no">
        <type><ref refid="utils_8h_1acfafb36b3d421d90e2aa61c8076d117d" kindref="member">Vector2D</ref></type>
        <definition>Vector2D testEndTurn_source1</definition>
        <argsstring></argsstring>
        <name>testEndTurn_source1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_endTurn.c" line="14" column="10" bodyfile="tests/test_endTurn.c" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__end_turn_8c_1a223dc94e003f0d62f9d90f547cd023c0" prot="public" static="no" mutable="no">
        <type><ref refid="utils_8h_1acfafb36b3d421d90e2aa61c8076d117d" kindref="member">Vector2D</ref></type>
        <definition>Vector2D testEndTurn_source2</definition>
        <argsstring></argsstring>
        <name>testEndTurn_source2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_endTurn.c" line="15" column="10" bodyfile="tests/test_endTurn.c" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__end_turn_8c_1a04b1bf70c3e0635878cabb7645b1c49b" prot="public" static="no" mutable="no">
        <type><ref refid="structure__list__test_8h_1aa7fe687e4e22bec51adb4918fe83aa1f" kindref="member">test_List</ref></type>
        <definition>test_List testEndTurn_listTests[TESTENDTURN_NUMBERTESTS]</definition>
        <argsstring>[TESTENDTURN_NUMBERTESTS]</argsstring>
        <name>testEndTurn_listTests</name>
        <initializer>= {
        {&quot;EndTurn_Production_Fise\0&quot;, testEndTurn_productionFise},
        {&quot;EndTurn_Production_Fisa\0&quot;, testEndTurn_productionFisa},
        {&quot;EndTurn_Move_Resource\0&quot;, testEndTurn_moveResource},
        {&quot;EndTurn_Generate_Resource\0&quot;, testEndTurn_generateResource},
        {&quot;EndTurn_Generate_Garbage\0&quot;, testEndTurn_generateGarbage},
        {&quot;EndTurn_RecyclingCenters\0&quot;, testEndTurn_RecyclingCenters},
        {&quot;EndTurn_Collector\0&quot;, testEndTurn_Collector},
        {&quot;EndTurn_Production_resetResourceGarbage\0&quot;, testEndTurn_resetResourceGarbage}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_endTurn.c" line="17" column="11" bodyfile="tests/test_endTurn.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__end_turn_8c_1ae47e76efa88790987479e6a95b6e936e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testEndTurn_createSuite</definition>
        <argsstring>(CU_pSuite pSuite)</argsstring>
        <name>testEndTurn_createSuite</name>
        <param>
          <type>CU_pSuite</type>
          <declname>pSuite</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is used to create the &quot;Test EndTurn&quot; suite with the test set on the Map type and its manipulation functions</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pSuite</parametername>
</parameternamelist>
<parameterdescription>
<para>test suite </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if it was successful and 1 otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_endTurn.c" line="28" column="5" bodyfile="tests/test_endTurn.c" bodystart="28" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="test__end_turn_8c_1a130aa59d6186cbf002909b47c79a2bcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testEndTurn_initSuite</definition>
        <argsstring>()</argsstring>
        <name>testEndTurn_initSuite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is used to initialize the sequence <simplesect kind="return"><para>0 if it was successful and 1 otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_endTurn.c" line="46" column="5" bodyfile="tests/test_endTurn.c" bodystart="46" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="test__end_turn_8c_1a76d97453a8a4f00b7e2a81827d8ce162" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testEndTurn_cleanSuite</definition>
        <argsstring>()</argsstring>
        <name>testEndTurn_cleanSuite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is used to close the suite <simplesect kind="return"><para>0 if it was successful and 1 otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_endTurn.c" line="56" column="5" bodyfile="tests/test_endTurn.c" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="test__end_turn_8c_1a7e4c4255a7e2a56acd504b072a5d10ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testEndTurn_productionFise</definition>
        <argsstring>()</argsstring>
        <name>testEndTurn_productionFise</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function makes it possible to test the production of Fise at each turn. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_endTurn.c" line="60" column="6" bodyfile="tests/test_endTurn.c" bodystart="60" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="test__end_turn_8c_1a212218968cc88081b34935c27b28453e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testEndTurn_productionFisa</definition>
        <argsstring>()</argsstring>
        <name>testEndTurn_productionFisa</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function makes it possible to test the production of Fisa at each turn. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_endTurn.c" line="82" column="6" bodyfile="tests/test_endTurn.c" bodystart="82" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="test__end_turn_8c_1a7b0f16f123b8bd6fa5ca631730224ed0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testEndTurn_moveResource</definition>
        <argsstring>()</argsstring>
        <name>testEndTurn_moveResource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is used to test the movement of boxes between machines </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_endTurn.c" line="129" column="6" bodyfile="tests/test_endTurn.c" bodystart="129" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="test__end_turn_8c_1a2e796b051b2fcb9e0bd8ac0baa578590" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testEndTurn_generateResource</definition>
        <argsstring>()</argsstring>
        <name>testEndTurn_generateResource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is used to test the generation of resources at the sources. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_endTurn.c" line="176" column="6" bodyfile="tests/test_endTurn.c" bodystart="176" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="test__end_turn_8c_1a1a3f12892971b5c66961118b2f7196ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testEndTurn_generateGarbage</definition>
        <argsstring>()</argsstring>
        <name>testEndTurn_generateGarbage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is used to test the modification of the resources at the door in garbage </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_endTurn.c" line="218" column="6" bodyfile="tests/test_endTurn.c" bodystart="218" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="test__end_turn_8c_1abec94e6c9eadf686da270798199b624a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testEndTurn_RecyclingCenters</definition>
        <argsstring>()</argsstring>
        <name>testEndTurn_RecyclingCenters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function makes it possible to test the correct functioning of the recycling centers. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_endTurn.c" line="246" column="6" bodyfile="tests/test_endTurn.c" bodystart="246" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="test__end_turn_8c_1a6ccde332ec0c8115ee9ac0fa1ac72d34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testEndTurn_Collector</definition>
        <argsstring>()</argsstring>
        <name>testEndTurn_Collector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is used to test the correct functioning of the collectors. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_endTurn.c" line="276" column="6" bodyfile="tests/test_endTurn.c" bodystart="276" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="test__end_turn_8c_1abdf4c53c62311072a7e46f0ad32c2f38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testEndTurn_resetResourceGarbage</definition>
        <argsstring>()</argsstring>
        <name>testEndTurn_resetResourceGarbage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function makes it possible to test the destruction of resources and send waste to the door for the boxes on the ground </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_endTurn.c" line="310" column="6" bodyfile="tests/test_endTurn.c" bodystart="310" bodyend="360"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="tests/test_endTurn.c"/>
  </compounddef>
</doxygen>
