<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="test__machine_8c" kind="file" language="C++">
    <compoundname>test_machine.c</compoundname>
    <includes refid="test__machine_8h" local="yes">test_machine.h</includes>
    <incdepgraph>
      <node id="8">
        <label>stdbool.h</label>
      </node>
      <node id="11">
        <label>../../headers/utils/utils.h</label>
        <link refid="utils_8h"/>
      </node>
      <node id="3">
        <label>CUnit/Basic.h</label>
      </node>
      <node id="6">
        <label>stdlib.h</label>
      </node>
      <node id="5">
        <label>../headers/data/machine.h</label>
        <link refid="machine_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>structure_list_test.h</label>
        <link refid="structure__list__test_8h"/>
      </node>
      <node id="1">
        <label>tests/test_machine.c</label>
        <link refid="test__machine_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>test_machine.h</label>
        <link refid="test__machine_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>error.h</label>
        <link refid="error_8h"/>
      </node>
      <node id="10">
        <label>facade.h</label>
        <link refid="facade_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>../utils/const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="9">
        <label>box.h</label>
        <link refid="box_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="test__machine_8c_1a1cba5c1ae1344616226f0162a8582fdb" prot="public" static="no" mutable="no">
        <type><ref refid="structure__list__test_8h_1aa7fe687e4e22bec51adb4918fe83aa1f" kindref="member">test_List</ref></type>
        <definition>test_List testMachine_listTests[TESTMACHINE_NUMBERTESTS]</definition>
        <argsstring>[TESTMACHINE_NUMBERTESTS]</argsstring>
        <name>testMachine_listTests</name>
        <initializer>= {
        {&quot;Machine_Instantiation\0&quot;, testMachine_create},
        {&quot;Machine_Rotation\0&quot;, testMachine_rotation},
        {&quot;Machine_Update\0&quot;, testMachine_LevelUp},
        {&quot;Machine_Add_Delete_Box\0&quot;, testMachine_AddDeleteBox}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Valentin DREANO </para>
</simplesect>
<simplesect kind="version"><para>0.1 </para>
</simplesect>
<simplesect kind="date"><para>17/04/2021</para>
</simplesect>
Contains all the suite for <ref refid="case_8c" kindref="compound">Case.c</ref> tests The assumption is made that the setters and getter are functional </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_machine.c" line="13" column="11" bodyfile="tests/test_machine.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__machine_8c_1a1fbb408b2766e13bd0e084a7d1f92c26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testMachine_createSuite</definition>
        <argsstring>(CU_pSuite pSuite)</argsstring>
        <name>testMachine_createSuite</name>
        <param>
          <type>CU_pSuite</type>
          <declname>pSuite</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is used to create the &quot;Test Machine&quot; suite with the test set on the Map type and its manipulation functions</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pSuite</parametername>
</parameternamelist>
<parameterdescription>
<para>test suite </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if it was successful and 1 otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_machine.c" line="20" column="5" bodyfile="tests/test_machine.c" bodystart="20" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="test__machine_8c_1abaa6535a5147f73625341ba2729f0011" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testMachine_initSuite</definition>
        <argsstring>()</argsstring>
        <name>testMachine_initSuite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is used to initialize the sequence <simplesect kind="return"><para>0 if it was successful and 1 otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_machine.c" line="37" column="5" bodyfile="tests/test_machine.c" bodystart="37" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="test__machine_8c_1a2869d818f96f3246dd3b0e88ff2fec66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testMachine_cleanSuite</definition>
        <argsstring>()</argsstring>
        <name>testMachine_cleanSuite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is used to close the suite <simplesect kind="return"><para>0 if it was successful and 1 otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_machine.c" line="41" column="5" bodyfile="tests/test_machine.c" bodystart="41" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="test__machine_8c_1a9449334f4f419a07ca9d0c709c6d8564" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testMachine_create</definition>
        <argsstring>()</argsstring>
        <name>testMachine_create</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function allows you to test that a machine is created with the correct values </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_machine.c" line="45" column="6" bodyfile="tests/test_machine.c" bodystart="45" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="test__machine_8c_1ac0c90d0129b10096f7f6126777fca9a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testMachine_rotation</definition>
        <argsstring>()</argsstring>
        <name>testMachine_rotation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function allows you to test that the rotation of a machine is done well. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_machine.c" line="60" column="6" bodyfile="tests/test_machine.c" bodystart="60" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="test__machine_8c_1afde9ca55e5e7483f56b39724f68715ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testMachine_LevelUp</definition>
        <argsstring>()</argsstring>
        <name>testMachine_LevelUp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function makes it possible to test that the incrementation of the level is done well </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_machine.c" line="98" column="6" bodyfile="tests/test_machine.c" bodystart="98" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="test__machine_8c_1a62ab2653175760914e4f324237002b6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testMachine_AddDeleteBox</definition>
        <argsstring>()</argsstring>
        <name>testMachine_AddDeleteBox</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is used to test the addition and deletion of a box in a machine </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/test_machine.c" line="116" column="6" bodyfile="tests/test_machine.c" bodystart="116" bodyend="144"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="tests/test_machine.c"/>
  </compounddef>
</doxygen>
